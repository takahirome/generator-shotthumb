#target 'photoshop';function shotthumb(){    //init};shotthumb = new shotthumb();shotthumb.main = function(exportPsd){  docObj = app.activeDocument;  docName = docObj.name; //ファイル名  var dateArr = this.dateClass(); //現在時刻の取得 //配列で渡す  var saveFile = String(docObj.path + docName.path);  var shotBackPath =  String(docObj.path) + "\/shotthumb-assets\/" + dateArr[0]+"\/";    //alert(shotBackPath);  this.checkPath(shotBackPath);    //backup  if(exportPsd) this.publishPSD(dateArr[1] , shotBackPath, docName);    //log  try{    this.publishJpg(dateArr[1] , shotBackPath, docName);  }  catch(e){      return false;  }    return true;}//checkPathshotthumb.checkPath= function(path)  {  var folderObj = new Folder (path);  //alert(folderObj.exists);  folderObj.create();  if(!folderObj.exists){    flag = folderObj.create();    if(!flag) return alert("保存のための、" + path + " を作成できませんでした。管理者にお問い合わせ下さい。");      }else false;  return true;}//現在時刻の取得shotthumb.dateClass = function(){  dArr =[];  dObj = new Date();  while((new Date()).getTime() < dObj.getTime() + 1000*5){      year = dObj.getYear();      year2 = (year < 2000) ? year + 1900 : year;      month = toDoubleDigits(dObj.getMonth() + 1);      day = toDoubleDigits(dObj.getDate());      h = toDoubleDigits(dObj.getHours());      m = toDoubleDigits(dObj.getMinutes());      s = toDoubleDigits(dObj.getSeconds());      dArr = [year2+'-'+month+'-'+day, h+"-"+m+"-"+s];      break;  }      function toDoubleDigits(num) {    num += "";      if (num.length === 1) {        num = "0" + num;      }     return num;       };  return dArr;}/* fin dateClass *///PSDshotthumb.publishPSD = function (date, path, docName){    var shotBackPath = path + "\/psd\/";    this.checkPath(shotBackPath);    fileName =  docName.slice(0,-4) + "\_" + date;    filePath = shotBackPath + fileName + ".psd";    fileObj = new File(filePath);        var exportOptions = new PhotoshopSaveOptions();    exportOptions.alphaChannels = true;    exportOptions.annotations = true;    exportOptions.embedColorProfile = true;    exportOptions.layers = true;    exportOptions.spotColors = true;        app.activeDocument.saveAs(fileObj,exportOptions,true, Extension.LOWERCASE);        return true;}//Pngshotthumb.publishPng = function (date, path, docName){  var shotBackPath = path + "\/png\/";  this.checkPath(shotBackPath);  //フォルダが存在している場合  fileName = docName.slice(0,-4) + "\_" + date;  filePath = shotBackPath + fileName + ".png";  //alert(filePath);  fileObj = new File(filePath);    pngOpt = new PNGSaveOptions();  pngOpt.interlaced = false; //インタレースなし    activeDocument.saveAs(fileObj, pngOpt, true, Extension.LOWERCASE);    return true;}/* fin publishPng *///Jpgshotthumb.publishJpg = function (date, path, docName){  var shotBackPath = path + "\/jpg\/";  this.checkPath(shotBackPath);  //フォルダが存在している場合  fileName = docName.slice(0,-4) + "\_" + date;  filePath = shotBackPath + fileName + ".jpg";  //alert(filePath);  fileObj = new File(filePath);    // jpgOpt = new JPEGSaveOptions();  //jpgOpt.optimized= false;  //jpgOpt.quality = 10;  //activeDocument.saveAs(fileObj, jpgOpt, true, Extension.LOWERCASE);    // output WEB JPGOptions    var options = new ExportOptionsSaveForWeb();    options.quality = 90;    options.format = SaveDocumentType.JPEG;    options.optimized = true;        activeDocument.exportDocument(fileObj,ExportType.SAVEFORWEB,options);    return true;}/* fin publishPng */shotthumb.generate = function(exportPsd){    this.main(exportPsd);}//helpersshotthumb.log = function(text){    console.info(text);}